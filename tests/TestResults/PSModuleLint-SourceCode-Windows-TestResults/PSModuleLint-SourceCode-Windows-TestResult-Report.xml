<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="PSModuleLint-SourceCode-Windows" total="70" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="2" invalid="0" date="2025-04-17" time="07:28:50">
  <environment user-domain="fv-az534-69" machine-name="fv-az534-69" platform="Microsoft Windows Server 2022 Datacenter|C:\Windows|\Device\Harddisk0\Partition2" clr-version="8.0.12" os-version="10.0.20348" nunit-version="2.5.8.0" cwd="D:\a\Path\Path" user="runneradmin" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="PSModuleLint-SourceCode-Windows" executed="True" result="Ignored" success="True" time="6.519" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="D:\a\_actions\PSModule\Invoke-ScriptAnalyzer\v3\scripts\tests\PSScriptAnalyzer\PSScriptAnalyzer.Tests.ps1" executed="True" result="Ignored" success="True" time="6.519" asserts="0" description="D:\a\_actions\PSModule\Invoke-ScriptAnalyzer\v3\scripts\tests\PSScriptAnalyzer\PSScriptAnalyzer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PSScriptAnalyzer" executed="True" result="Ignored" success="True" time="3.5009" asserts="0" description="PSScriptAnalyzer">
            <results>
              <test-suite type="TestFixture" name="PSScriptAnalyzer.Severity: Information" executed="True" result="Success" success="True" time="0.2247" asserts="0" description="PSScriptAnalyzer.Severity: Information">
                <results>
                  <test-suite type="ParameterizedTest" name="PSScriptAnalyzer.Severity: Information.'=' is not an assignment operator. Did you mean the equality operator '-eq'? (PSPossibleIncorrectUsageOfAssignmentOperator)" executed="True" result="Success" success="True" time="0.1617" asserts="0" description="'=' is not an assignment operator. Did you mean the equality operator '-eq'? (PSPossibleIncorrectUsageOfAssignmentOperator)">
                    <results>
                      <test-case description="'=' is not an assignment operator. Did you mean the equality operator '-eq'? (PSPossibleIncorrectUsageOfAssignmentOperator)" name="PSScriptAnalyzer.Severity: Information.'=' is not an assignment operator. Did you mean the equality operator '-eq'? (PSPossibleIncorrectUsageOfAssignmentOperator)(System.Collections.Specialized.OrderedDictionary)" time="0.1014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid trailing whitespace (PSAvoidTrailingWhitespace)" name="PSScriptAnalyzer.Severity: Information.Avoid trailing whitespace (PSAvoidTrailingWhitespace)" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid using double quotes if the string is constant. (PSAvoidUsingDoubleQuotesForConstantString)" name="PSScriptAnalyzer.Severity: Information.Avoid using double quotes if the string is constant. (PSAvoidUsingDoubleQuotesForConstantString)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Positional Parameters (PSAvoidUsingPositionalParameters)" name="PSScriptAnalyzer.Severity: Information.Avoid Using Positional Parameters (PSAvoidUsingPositionalParameters)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Basic Comment Help (PSProvideCommentHelp)" name="PSScriptAnalyzer.Severity: Information.Basic Comment Help (PSProvideCommentHelp)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="DSC examples are present (PSDSCDscExamplesPresent)" name="PSScriptAnalyzer.Severity: Information.DSC examples are present (PSDSCDscExamplesPresent)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Dsc tests are present (PSDSCDscTestsPresent)" name="PSScriptAnalyzer.Severity: Information.Dsc tests are present (PSDSCDscTestsPresent)" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Return Correct Types For DSC Functions (PSDSCReturnCorrectTypesForDSCFunctions)" name="PSScriptAnalyzer.Severity: Information.Return Correct Types For DSC Functions (PSDSCReturnCorrectTypesForDSCFunctions)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use exact casing of cmdlet/function/parameter name. (PSUseCorrectCasing)" name="PSScriptAnalyzer.Severity: Information.Use exact casing of cmdlet/function/parameter name. (PSUseCorrectCasing)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use OutputType Correctly (PSUseOutputTypeCorrectly)" name="PSScriptAnalyzer.Severity: Information.Use OutputType Correctly (PSUseOutputTypeCorrectly)" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use verbose message in DSC resource (PSDSCUseVerboseMessageInDSCResource)" name="PSScriptAnalyzer.Severity: Information.Use verbose message in DSC resource (PSDSCUseVerboseMessageInDSCResource)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PSScriptAnalyzer.Severity: Warning" executed="True" result="Ignored" success="True" time="0.8892" asserts="0" description="PSScriptAnalyzer.Severity: Warning">
                <results>
                  <test-suite type="ParameterizedTest" name="PSScriptAnalyzer.Severity: Warning.'&gt;' is not a comparison operator. Use  '-gt' (greater than) or '-ge' (greater or equal). (PSPossibleIncorrectUsageOfRedirectionOperator)" executed="True" result="Ignored" success="True" time="0.6538" asserts="0" description="'&gt;' is not a comparison operator. Use  '-gt' (greater than) or '-ge' (greater or equal). (PSPossibleIncorrectUsageOfRedirectionOperator)">
                    <results>
                      <test-case description="'&gt;' is not a comparison operator. Use  '-gt' (greater than) or '-ge' (greater or equal). (PSPossibleIncorrectUsageOfRedirectionOperator)" name="PSScriptAnalyzer.Severity: Warning.'&gt;' is not a comparison operator. Use  '-gt' (greater than) or '-ge' (greater or equal). (PSPossibleIncorrectUsageOfRedirectionOperator)(System.Collections.Specialized.OrderedDictionary)" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Align assignment statement (PSAlignAssignmentStatement)" name="PSScriptAnalyzer.Severity: Warning.Align assignment statement (PSAlignAssignmentStatement)" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid AllowUnencryptedAuthentication Switch (PSAvoidUsingAllowUnencryptedAuthentication)" name="PSScriptAnalyzer.Severity: Warning.Avoid AllowUnencryptedAuthentication Switch (PSAvoidUsingAllowUnencryptedAuthentication)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Default Value For Mandatory Parameter (PSAvoidDefaultValueForMandatoryParameter)" name="PSScriptAnalyzer.Severity: Warning.Avoid Default Value For Mandatory Parameter (PSAvoidDefaultValueForMandatoryParameter)" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid exclaim operator (PSAvoidExclaimOperator)" name="PSScriptAnalyzer.Severity: Warning.Avoid exclaim operator (PSAvoidExclaimOperator)" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid global aliases. (PSAvoidGlobalAliases)" name="PSScriptAnalyzer.Severity: Warning.Avoid global aliases. (PSAvoidGlobalAliases)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid global functiosn and aliases (PSAvoidGlobalFunctions)" name="PSScriptAnalyzer.Severity: Warning.Avoid global functiosn and aliases (PSAvoidGlobalFunctions)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Invoking Empty Members (PSAvoidInvokingEmptyMembers)" name="PSScriptAnalyzer.Severity: Warning.Avoid Invoking Empty Members (PSAvoidInvokingEmptyMembers)" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid long lines (PSAvoidLongLines)" name="PSScriptAnalyzer.Severity: Warning.Avoid long lines (PSAvoidLongLines)" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid multiple type specifiers on parameters (PSAvoidMultipleTypeAttributes)" name="PSScriptAnalyzer.Severity: Warning.Avoid multiple type specifiers on parameters (PSAvoidMultipleTypeAttributes)" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid overwriting built in cmdlets (PSAvoidOverwritingBuiltInCmdlets)" name="PSScriptAnalyzer.Severity: Warning.Avoid overwriting built in cmdlets (PSAvoidOverwritingBuiltInCmdlets)" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid semicolons as line terminators (PSAvoidSemicolonsAsLineTerminators)" name="PSScriptAnalyzer.Severity: Warning.Avoid semicolons as line terminators (PSAvoidSemicolonsAsLineTerminators)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Broken Hash Algorithms (PSAvoidUsingBrokenHashAlgorithms)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Broken Hash Algorithms (PSAvoidUsingBrokenHashAlgorithms)" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Cmdlet Aliases or omitting the 'Get-' prefix. (PSAvoidUsingCmdletAliases)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Cmdlet Aliases or omitting the 'Get-' prefix. (PSAvoidUsingCmdletAliases)" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Deprecated Manifest Fields (PSAvoidUsingDeprecatedManifestFields)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Deprecated Manifest Fields (PSAvoidUsingDeprecatedManifestFields)" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Empty Catch Block (PSAvoidUsingEmptyCatchBlock)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Empty Catch Block (PSAvoidUsingEmptyCatchBlock)" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Get-WMIObject, Remove-WMIObject, Invoke-WmiMethod, Register-WmiEvent, Set-WmiInstance (PSAvoidUsingWMICmdlet)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Get-WMIObject, Remove-WMIObject, Invoke-WmiMethod, Register-WmiEvent, Set-WmiInstance (PSAvoidUsingWMICmdlet)" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Invoke-Expression (PSAvoidUsingInvokeExpression)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Invoke-Expression (PSAvoidUsingInvokeExpression)" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid using null or empty HelpMessage parameter attribute. (PSAvoidNullOrEmptyHelpMessageAttribute)" name="PSScriptAnalyzer.Severity: Warning.Avoid using null or empty HelpMessage parameter attribute. (PSAvoidNullOrEmptyHelpMessageAttribute)" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Plain Text For Password Parameter (PSAvoidUsingPlainTextForPassword)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Plain Text For Password Parameter (PSAvoidUsingPlainTextForPassword)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using ShouldContinue Without Boolean Force Parameter (PSAvoidShouldContinueWithoutForce)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using ShouldContinue Without Boolean Force Parameter (PSAvoidShouldContinueWithoutForce)" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Write-Host (PSAvoidUsingWriteHost)" name="PSScriptAnalyzer.Severity: Warning.Avoid Using Write-Host (PSAvoidUsingWriteHost)" time="0.2012" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Changing automtic variables might have undesired side effects (PSAvoidAssignmentToAutomaticVariable)" name="PSScriptAnalyzer.Severity: Warning.Changing automtic variables might have undesired side effects (PSAvoidAssignmentToAutomaticVariable)" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Cmdlet Singular Noun (PSUseSingularNouns)" name="PSScriptAnalyzer.Severity: Warning.Cmdlet Singular Noun (PSUseSingularNouns)" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Cmdlet Verbs (PSUseApprovedVerbs)" name="PSScriptAnalyzer.Severity: Warning.Cmdlet Verbs (PSUseApprovedVerbs)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Create hashtables with literal initializers (PSUseLiteralInitializerForHashtable)" name="PSScriptAnalyzer.Severity: Warning.Create hashtables with literal initializers (PSUseLiteralInitializerForHashtable)" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Extra Variables (PSUseDeclaredVarsMoreThanAssignments)" name="PSScriptAnalyzer.Severity: Warning.Extra Variables (PSUseDeclaredVarsMoreThanAssignments)" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Misleading Backtick (PSMisleadingBacktick)" name="PSScriptAnalyzer.Severity: Warning.Misleading Backtick (PSMisleadingBacktick)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Module Manifest Fields (PSMissingModuleManifestField)" name="PSScriptAnalyzer.Severity: Warning.Module Manifest Fields (PSMissingModuleManifestField)" time="0.006" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-case description="No Global Variables (PSAvoidGlobalVars)" name="PSScriptAnalyzer.Severity: Warning.No Global Variables (PSAvoidGlobalVars)" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Null Comparison (PSPossibleIncorrectComparisonWithNull)" name="PSScriptAnalyzer.Severity: Warning.Null Comparison (PSPossibleIncorrectComparisonWithNull)" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Place close braces (PSPlaceCloseBrace)" name="PSScriptAnalyzer.Severity: Warning.Place close braces (PSPlaceCloseBrace)" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Place open braces consistently (PSPlaceOpenBrace)" name="PSScriptAnalyzer.Severity: Warning.Place open braces consistently (PSPlaceOpenBrace)" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Reserved Cmdlet Chars (PSReservedCmdletChar)" name="PSScriptAnalyzer.Severity: Warning.Reserved Cmdlet Chars (PSReservedCmdletChar)" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="ReviewUnusedParameter (PSReviewUnusedParameter)" name="PSScriptAnalyzer.Severity: Warning.ReviewUnusedParameter (PSReviewUnusedParameter)" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should Process (PSShouldProcess)" name="PSScriptAnalyzer.Severity: Warning.Should Process (PSShouldProcess)" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Switch Parameters Should Not Default To True (PSAvoidDefaultValueSwitchParameter)" name="PSScriptAnalyzer.Severity: Warning.Switch Parameters Should Not Default To True (PSAvoidDefaultValueSwitchParameter)" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use 'Using:' scope modifier in RunSpace ScriptBlocks (PSUseUsingScopeModifierInNewRunspaces)" name="PSScriptAnalyzer.Severity: Warning.Use 'Using:' scope modifier in RunSpace ScriptBlocks (PSUseUsingScopeModifierInNewRunspaces)" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use BOM encoding for non-ASCII files (PSUseBOMForUnicodeEncodedFile)" name="PSScriptAnalyzer.Severity: Warning.Use BOM encoding for non-ASCII files (PSUseBOMForUnicodeEncodedFile)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use Cmdlet Correctly (PSUseCmdletCorrectly)" name="PSScriptAnalyzer.Severity: Warning.Use Cmdlet Correctly (PSUseCmdletCorrectly)" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use compatible cmdlets (PSUseCompatibleCmdlets)" name="PSScriptAnalyzer.Severity: Warning.Use compatible cmdlets (PSUseCompatibleCmdlets)" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use compatible commands (PSUseCompatibleCommands)" name="PSScriptAnalyzer.Severity: Warning.Use compatible commands (PSUseCompatibleCommands)" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use compatible types (PSUseCompatibleTypes)" name="PSScriptAnalyzer.Severity: Warning.Use compatible types (PSUseCompatibleTypes)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use consistent indentation (PSUseConsistentIndentation)" name="PSScriptAnalyzer.Severity: Warning.Use consistent indentation (PSUseConsistentIndentation)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use process block for command that accepts input from pipeline. (PSUseProcessBlockForPipelineCommand)" name="PSScriptAnalyzer.Severity: Warning.Use process block for command that accepts input from pipeline. (PSUseProcessBlockForPipelineCommand)" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use PSCredential type. (PSUsePSCredentialType)" name="PSScriptAnalyzer.Severity: Warning.Use PSCredential type. (PSUsePSCredentialType)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use ShouldProcess For State Changing Functions (PSUseShouldProcessForStateChangingFunctions)" name="PSScriptAnalyzer.Severity: Warning.Use ShouldProcess For State Changing Functions (PSUseShouldProcessForStateChangingFunctions)" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use SupportsShouldProcess (PSUseSupportsShouldProcess)" name="PSScriptAnalyzer.Severity: Warning.Use SupportsShouldProcess (PSUseSupportsShouldProcess)" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use the *ToExport module manifest fields. (PSUseToExportFieldsInManifest)" name="PSScriptAnalyzer.Severity: Warning.Use the *ToExport module manifest fields. (PSUseToExportFieldsInManifest)" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-case description="Use UTF8 Encoding For Help File (PSUseUTF8EncodingForHelpFile)" name="PSScriptAnalyzer.Severity: Warning.Use UTF8 Encoding For Help File (PSUseUTF8EncodingForHelpFile)" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use whitespaces (PSUseConsistentWhitespace)" name="PSScriptAnalyzer.Severity: Warning.Use whitespaces (PSUseConsistentWhitespace)" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PSScriptAnalyzer.Severity: Error" executed="True" result="Success" success="True" time="0.9428" asserts="0" description="PSScriptAnalyzer.Severity: Error">
                <results>
                  <test-suite type="ParameterizedTest" name="PSScriptAnalyzer.Severity: Error.Avoid Using ComputerName Hardcoded (PSAvoidUsingComputerNameHardcoded)" executed="True" result="Success" success="True" time="0.0458" asserts="0" description="Avoid Using ComputerName Hardcoded (PSAvoidUsingComputerNameHardcoded)">
                    <results>
                      <test-case description="Avoid Using ComputerName Hardcoded (PSAvoidUsingComputerNameHardcoded)" name="PSScriptAnalyzer.Severity: Error.Avoid Using ComputerName Hardcoded (PSAvoidUsingComputerNameHardcoded)(System.Collections.Specialized.OrderedDictionary)" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using SecureString With Plain Text (PSAvoidUsingConvertToSecureStringWithPlainText)" name="PSScriptAnalyzer.Severity: Error.Avoid Using SecureString With Plain Text (PSAvoidUsingConvertToSecureStringWithPlainText)" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Avoid Using Username and Password Parameters (PSAvoidUsingUsernameAndPasswordParams)" name="PSScriptAnalyzer.Severity: Error.Avoid Using Username and Password Parameters (PSAvoidUsingUsernameAndPasswordParams)" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Reserved Parameters (PSReservedParams)" name="PSScriptAnalyzer.Severity: Error.Reserved Parameters (PSReservedParams)" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use compatible syntax (PSUseCompatibleSyntax)" name="PSScriptAnalyzer.Severity: Error.Use compatible syntax (PSUseCompatibleSyntax)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use identical mandatory parameters for DSC Get/Test/Set TargetResource functions (PSDSCUseIdenticalMandatoryParametersForDSC)" name="PSScriptAnalyzer.Severity: Error.Use identical mandatory parameters for DSC Get/Test/Set TargetResource functions (PSDSCUseIdenticalMandatoryParametersForDSC)" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use Identical Parameters For DSC Test and Set Functions (PSDSCUseIdenticalParametersForDSC)" name="PSScriptAnalyzer.Severity: Error.Use Identical Parameters For DSC Test and Set Functions (PSDSCUseIdenticalParametersForDSC)" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Use Standard Get/Set/Test TargetResource functions in DSC Resource (PSDSCStandardDSCFunctionsInResource)" name="PSScriptAnalyzer.Severity: Error.Use Standard Get/Set/Test TargetResource functions in DSC Resource (PSDSCStandardDSCFunctionsInResource)" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>